{"version":3,"sources":["components/inputs/inputs.module.css","pages/TwoLists/TwoLists.module.css","pages/Duplicates/Duplicates.module.css","components/Header/Header.module.css","components/Navigation/Burger/Burger.module.css","hoc/Layout/Layout.module.css","components/CopyBtn/CopyBtn.module.css","components/Navigation/MenuContext.js","components/Navigation/Burger/Burger.js","components/Header/Header.js","components/Navigation/Menu/Menu.js","hoc/Layout/Layout.js","utils/Reformat.js","utils/localStorage.js","utils/list-string.js","components/inputs/Textarea.js","components/inputs/InputText.js","components/CopyBtn/CopyBtn.js","pages/Reformat/Reformat.js","pages/Duplicates/Duplicates.js","utils/duplicates.js","components/inputs/Radio.js","pages/TwoLists/TwoLists.js","utils/twoLists.js","App/App.js","index.js","components/Navigation/Menu/Menu.module.css","pages/Reformat/Reformat.module.css"],"names":["module","exports","MenuStateContext","React","createContext","MenuContext","children","useState","isOpen","setIsOpen","contextValue","toggleMenu","prevState","routes","Provider","value","Burger","className","useContext","lineStyles","styles","burger__line","buttonStyles","burger","push","burger__line_active","burger_active","lines","Array","fill","map","_","index","join","onClick","withRouter","location","currentTitle","pathname","useEffect","document","title","headerSmall","headerLarge","Menu","$routes","Object","keys","item","li","link","activeClassName","link_current","to","$dimmer","dimmer","menuStyles","menu","menu_opened","ul","href","style","color","Layout","layout","parseTemplate","string","stringList","regExp","variable","match","type","separator","substr","replace","lsWrite","key","data","localStorage","setItem","JSON","stringify","lsRead","oldData","getItem","parse","listToString","list","stringToList","split","Textarea","onChange","required","placeholder","label","readOnly","name","labelClasses","textarea","InputText","onFocus","inputClasses","input","CopyBtn","payload","touched","setTouched","$btn","navigator","clipboard","btnStyles","copied","btnText","writeText","then","catch","err","console","log","Reformat","LS_TEMPLATE_KEY","LS_INPUT_DATA_KEY","inputData","setInputData","inputTemplate","setInputTemplate","outputTemplate","setOutputTemplate","outputTemplateTouched","setOutputTemplateTouched","outputData","setOutputData","oldTemplates","output","oldInputData","$copyBtn","length","btn","onSubmit","e","preventDefault","parsedStrings","template","strings","filter","i","Boolean","templateAsList","stringValues","stringItem","prevVar","stringObj","templateItem","separatorIndex","indexOf","lastItem","reformat","result","stringsItem","stringInserter","form","block","templateInput","newValue","target","dataToText","Duplicates","deleted","setDeleted","$deletedStat","stat","copyBtn","before","set","Set","from","difference","delDuplicates","textareaSpanBox","Radio","checked","radio","id","radioLabel","htmlFor","TwoLists","mode","setMode","listA","setListA","listB","setListB","listC","setListC","inputDataHandler","modeHandler","$modeSelectors","$inputLists","state","inputList","b","num","includes","a","getAMinusB","concat","getWithoutIntersections","inputListsBox","resultList","modeSelectors","App","path","component","app","StrictMode","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.113c5234.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"inputs_label__1B6NP\",\"textarea\":\"inputs_textarea__2fNMO\",\"input\":\"inputs_input__eZdoe\",\"radio\":\"inputs_radio__ToW0K\",\"radioLabel\":\"inputs_radioLabel__1V4eg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TwoLists_form__R0e0r\",\"inputListsBox\":\"TwoLists_inputListsBox__2opLo\",\"inputList\":\"TwoLists_inputList__3qlmh\",\"resultList\":\"TwoLists_resultList__3zVI7\",\"modeSelectors\":\"TwoLists_modeSelectors__2Ey_H\",\"btn\":\"TwoLists_btn__n8EkI\",\"copyBtn\":\"TwoLists_copyBtn__250-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Duplicates_form__3LzRm\",\"textareaSpanBox\":\"Duplicates_textareaSpanBox__2E1Qo\",\"textarea\":\"Duplicates_textarea__1gVNO\",\"stat\":\"Duplicates_stat__24-fI\",\"copyBtn\":\"Duplicates_copyBtn__1iqn-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__179Nd\",\"header\":\"Header_header__1QjRe\",\"headerSmall\":\"Header_headerSmall__nn16k\",\"headerLarge\":\"Header_headerLarge__3Kl0e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"Burger_burger__152NX\",\"burger_active\":\"Burger_burger_active__3wKu3\",\"burger__line\":\"Burger_burger__line__2GBeR\",\"burger__line_active\":\"Burger_burger__line_active__1Oo-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3UcOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copied\":\"CopyBtn_copied__1MJMN\"};","import React, {useState} from 'react'\r\nexport const MenuStateContext = React.createContext({})\r\n\r\nexport default function MenuContext({children}) {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  function toggleMenu() {\r\n    setIsOpen(prevState => !prevState)\r\n  }\r\n\r\n  const routes = {\r\n    '/reformat': 'Форматирование строк',\r\n    '/duplicates': 'Удаление дубликатов строк',\r\n    '/twolists': 'Манипуляции с двумя списками',\r\n  }\r\n\r\n  const contextValue = {\r\n    isOpen,\r\n    toggleMenu,\r\n    routes\r\n  }\r\n\r\n  return (\r\n    <MenuStateContext.Provider value={contextValue}>\r\n      {children}\r\n    </MenuStateContext.Provider>\r\n  )\r\n}","import React, {useContext} from 'react'\r\nimport styles from './Burger.module.css'\r\nimport {MenuStateContext} from \"../MenuContext\";\r\n\r\nexport default function Burger({className}) {\r\n  const {isOpen, toggleMenu} = useContext(MenuStateContext)\r\n\r\n  const lineStyles = [styles.burger__line]\r\n  const buttonStyles = [styles.burger]\r\n  if (isOpen) {\r\n    lineStyles.push(styles.burger__line_active)\r\n    buttonStyles.push(styles.burger_active)\r\n  }\r\n  if (className) buttonStyles.push(className)\r\n\r\n  const lines = new Array(3)\r\n    .fill('')\r\n    .map((_, index) => <span key={'line' + index} className={lineStyles.join(' ')}> </span>)\r\n\r\n  return (\r\n    <button\r\n      className={buttonStyles.join(' ')}\r\n      onClick={toggleMenu}\r\n    >\r\n      {lines}\r\n    </button>\r\n  )\r\n}","import styles from './Header.module.css'\r\nimport React, {Fragment, useContext, useEffect} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Burger from \"../Navigation/Burger/Burger\";\r\nimport {MenuStateContext} from \"../Navigation/MenuContext\";\r\n\r\nfunction Header({location}) {\r\n  const {routes} = useContext(MenuStateContext)\r\n  const currentLocation = location.pathname\r\n  const currentTitle = routes[currentLocation]\r\n\r\n  useEffect(() => {\r\n    document.title = currentTitle\r\n  }, [currentTitle])\r\n\r\n  return (\r\n    <Fragment>\r\n      <header className={styles.headerSmall}>\r\n        <Burger/>\r\n        <h1 className={styles.title}>{currentTitle}</h1>\r\n      </header>\r\n\r\n      <header className={styles.headerLarge}>\r\n        <Burger/>\r\n        <div className='container'>\r\n          <h1 className={styles.title}>{currentTitle}</h1>\r\n        </div>\r\n      </header>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header)","import React, {Fragment, useContext} from 'react'\r\nimport styles from './Menu.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {MenuStateContext} from \"../MenuContext\";\r\n\r\nfunction Menu() {\r\n  const {isOpen, routes, toggleMenu} = useContext(MenuStateContext)\r\n\r\n  // создание элементов\r\n  const $routes = Object.keys(routes).map((item) => {\r\n    return (\r\n      <li\r\n        className={styles.li}\r\n        key={routes[item]}\r\n      >\r\n        <NavLink\r\n          className={styles.link}\r\n          activeClassName={styles.link_current}\r\n          onClick={toggleMenu}\r\n          to={item}\r\n        >{routes[item]}</NavLink>\r\n      </li>\r\n    )\r\n  })\r\n  const $dimmer = isOpen\r\n    ? (<div\r\n      className={styles.dimmer}\r\n      onClick={toggleMenu}\r\n    > </div>)\r\n    : null\r\n\r\n  // инициализация стилей\r\n  let menuStyles = [styles.menu]\r\n  if (isOpen) menuStyles.push(styles.menu_opened)\r\n  menuStyles = menuStyles.join(' ')\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={menuStyles}>\r\n        <nav>\r\n          <ul className={styles.ul}>\r\n            {$routes}\r\n            <li className={styles.li}>\r\n              <a\r\n                href=\"https://github.com/masawik/list-utils\"\r\n                className={styles.link}\r\n                style={{color: 'green'}}\r\n              >GitHub</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      {$dimmer}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport styles from './Layout.module.css'\r\nimport Header from \"../../components/Header/Header\";\r\nimport Menu from \"../../components/Navigation/Menu/Menu\";\r\nimport MenuContext from \"../../components/Navigation/MenuContext\";\r\n\r\nexport default function Layout({children}) {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <MenuContext>\r\n        <Menu/>\r\n        <Header/>\r\n      </MenuContext>\r\n\r\n      <div className='container'>\r\n        <main>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n}","function parseTemplate(string) {\r\n  const stringList = []\r\n  const regExp = /{([\\w\\d]+)}/\r\n\r\n  while (string) {\r\n    const variable = string.match(regExp)\r\n    if (variable) {\r\n      if (variable.index) {\r\n        const separator = string.substr(0, variable.index)\r\n        stringList.push({type: 'separator', value: separator})\r\n        string = string.substr(variable.index)\r\n      }\r\n\r\n      string = string.replace(variable[0], '')\r\n      stringList.push({type: 'var', value: variable[1]})\r\n    } else {\r\n      stringList.push({type: 'separator', value: string})\r\n      break\r\n    }\r\n  }\r\n  return stringList\r\n}\r\n\r\nexport function reformat(template, strings) {\r\n  strings = strings.filter(i => Boolean(i))\r\n  const templateAsList = parseTemplate(template)\r\n  const stringValues = []\r\n  for (let stringItem of strings) {\r\n    let prevVar\r\n    const stringObj = {}\r\n\r\n    for (let templateItem of templateAsList) {\r\n      if (templateItem.type === 'var') {\r\n        prevVar = templateItem.value\r\n      } else if (templateItem.type === 'separator') {\r\n        const separator = templateItem.value\r\n        const separatorIndex = stringItem.indexOf(separator)\r\n        if (prevVar) {\r\n          stringObj[prevVar] = stringItem.substr(0, separatorIndex)\r\n        }\r\n        stringItem = stringItem.substr(separatorIndex + separator.length)\r\n      }\r\n    }\r\n    const lastItem = templateAsList[templateAsList.length - 1]\r\n    if (lastItem.type === 'var') {\r\n      stringObj[lastItem.value] = stringItem\r\n    }\r\n    stringValues.push(stringObj)\r\n  }\r\n\r\n  return stringValues\r\n}\r\n\r\nexport function stringInserter(template, strings) {\r\n  const templateAsList = parseTemplate(template)\r\n\r\n  const stringList = []\r\n  for (let stringsItem of strings) {\r\n    let string = ''\r\n    for (let templateItem of templateAsList) {\r\n      if (templateItem.type === 'var') {\r\n        string = string + stringsItem[templateItem.value]\r\n      } else if (templateItem.type === 'separator') {\r\n        string = string + templateItem.value\r\n      }\r\n    }\r\n    stringList.push(string)\r\n  }\r\n\r\n  return stringList\r\n}\r\n","export function lsWrite(key, data) {\r\n  return localStorage.setItem(key, JSON.stringify(data))\r\n}\r\n\r\nexport function lsRead(key) {\r\n  const oldData = localStorage.getItem(key)\r\n  return oldData ? JSON.parse(oldData) : false\r\n}","export function listToString(list) {\r\n  return list.join('\\n')\r\n}\r\n\r\nexport function stringToList(string) {\r\n  return string.split('\\n')\r\n}","import React from 'react'\r\nimport styles from './inputs.module.css'\r\n\r\nexport default function Textarea({className, value, onChange, required, placeholder, label, readOnly, name}) {\r\n  let labelClasses = [styles.label]\r\n  if (className) labelClasses = labelClasses + ' ' + className\r\n\r\n\r\n  return (\r\n    <label className={labelClasses}>\r\n      {label}\r\n      <textarea\r\n        className={styles.textarea}\r\n        value={value}\r\n        onChange={onChange}\r\n        required={required}\r\n        placeholder={placeholder}\r\n        readOnly={readOnly}\r\n        name={name}\r\n      />\r\n    </label>\r\n  )\r\n}","import React from 'react'\r\nimport styles from './inputs.module.css'\r\n\r\nexport default function InputText({className, value, onChange, onFocus, label}) {\r\n  let inputClasses = styles.input\r\n  if (className) inputClasses = inputClasses + ' ' + className\r\n  return (\r\n    <label className={styles.label}>\r\n      {label}\r\n      <input\r\n        className={inputClasses}\r\n        type=\"text\"\r\n        placeholder=\"маска выходных данных\"\r\n        value={value}\r\n        onChange={onChange}\r\n        onFocus={onFocus}\r\n      />\r\n    </label>\r\n  )\r\n}","import React, {useState} from 'react'\r\nimport {listToString} from \"../../utils/list-string\";\r\nimport styles from './CopyBtn.module.css'\r\n\r\nexport default function CopyBtn({className, payload}) {\r\n  const [touched, setTouched] = useState(false)\r\n\r\n  let $btn = null\r\n\r\n  if (navigator.clipboard) {\r\n    const copyBtnHandler = () => {\r\n      navigator.clipboard.writeText(listToString(payload))\r\n        .then(() => {\r\n        })\r\n        .catch(err => {\r\n          console.log('ошибка при записи в буфер обмена:', err);\r\n        });\r\n      setTouched(true)\r\n    }\r\n\r\n    let btnStyles = ['button']\r\n    if (className) btnStyles.push(className)\r\n    if (touched) btnStyles.push(styles.copied)\r\n    const btnText = touched ? 'Скопировано' : 'копировать'\r\n    btnStyles = btnStyles.join(' ')\r\n\r\n    $btn = (\r\n        <button\r\n          className={btnStyles}\r\n          onClick={copyBtnHandler}\r\n        >{btnText}</button>\r\n    )\r\n  }\r\n\r\n  return $btn\r\n}","import React, {useEffect, useState} from 'react'\r\nimport styles from './Reformat.module.css'\r\nimport {stringInserter, reformat} from \"../../utils/Reformat\";\r\nimport {lsRead, lsWrite} from \"../../utils/localStorage\";\r\nimport {listToString, stringToList} from \"../../utils/list-string\";\r\nimport Textarea from \"../../components/inputs/Textarea\";\r\nimport InputText from \"../../components/inputs/InputText\";\r\nimport CopyBtn from \"../../components/CopyBtn/CopyBtn\";\r\n\r\nfunction Reformat() {\r\n  // константы\r\n  const LS_TEMPLATE_KEY = 'templates'\r\n  const LS_INPUT_DATA_KEY = 'inputData'\r\n  const defaultInputDataValue = ['192.168.1.1:80:login:pasword', '192.168.1.1:80:login:pasword']\r\n  const inputTemplateValue = '{ip}:{port}:{login}:{password}'\r\n  const outputTemplateValue = '{ip}:{port}@{login}:{password}'\r\n\r\n  // инициализация стейтов\r\n  const [inputData, setInputData] = useState(defaultInputDataValue)\r\n  const [inputTemplate, setInputTemplate] = useState(inputTemplateValue)\r\n  const [outputTemplate, setOutputTemplate] = useState(outputTemplateValue)\r\n  const [outputTemplateTouched, setOutputTemplateTouched] = useState(false)\r\n  const [outputData, setOutputData] = useState([])\r\n\r\n  // синхронизация с лс при загрузке компонента\r\n  useEffect(() => {\r\n    const oldTemplates = lsRead(LS_TEMPLATE_KEY)\r\n    if (oldTemplates) {\r\n      setInputTemplate(oldTemplates.input)\r\n      setOutputTemplate(oldTemplates.output)\r\n    }\r\n    const oldInputData = lsRead(LS_INPUT_DATA_KEY)\r\n    if (oldInputData) setInputData(oldInputData)\r\n  }, [])\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    const parsedStrings = reformat(inputTemplate, inputData)\r\n    const result = stringInserter(outputTemplate, parsedStrings)\r\n    setOutputData(result)\r\n    lsWrite(LS_TEMPLATE_KEY, {input: inputTemplate, output: outputTemplate})\r\n    lsWrite(LS_INPUT_DATA_KEY, inputData)\r\n  }\r\n\r\n  const dataToText = (data = inputData) => {\r\n    return listToString(data)\r\n  }\r\n\r\n  const inputDataHandler = e => {\r\n    setInputData(stringToList(e.target.value))\r\n  }\r\n\r\n  const inputTemplateHandler = e => {\r\n    const newValue = e.target.value\r\n    if (!outputTemplateTouched) {\r\n      setOutputTemplate(newValue)\r\n    }\r\n    setInputTemplate(newValue)\r\n  }\r\n\r\n  const $copyBtn = outputData.length\r\n    ? (\r\n      <CopyBtn\r\n        payload={outputData}\r\n        className={styles.btn}\r\n      />\r\n    )\r\n    : null\r\n\r\n  return (\r\n    <form\r\n      onSubmit={onSubmit}\r\n      className={styles.form}\r\n    >\r\n      <div className={styles.block}>\r\n        <InputText\r\n          label=\"маска входных данных\"\r\n          className={styles.templateInput}\r\n          type=\"text\"\r\n          value={inputTemplate}\r\n          onChange={inputTemplateHandler}\r\n          name={'inputTemplate'}\r\n        />\r\n\r\n        <Textarea\r\n          label='входные данные'\r\n          className={styles.textarea}\r\n          onChange={inputDataHandler}\r\n          value={dataToText()}\r\n          required\r\n        />\r\n\r\n        <button\r\n          type='submit'\r\n          className={'button ' + styles.btn}\r\n        >\r\n          форматировать\r\n        </button>\r\n      </div>\r\n\r\n      <div className={styles.block}>\r\n        <InputText\r\n          label='маска выходных данных'\r\n          className={styles.templateInput}\r\n          type=\"text\"\r\n          value={outputTemplate}\r\n          onChange={e => {\r\n            setOutputTemplate(e.target.value)\r\n          }}\r\n          onFocus={() => {\r\n            setOutputTemplateTouched(true)\r\n          }}\r\n        />\r\n\r\n        <Textarea\r\n          label='выходные данные'\r\n          className={styles.textarea}\r\n          readOnly\r\n          value={listToString(outputData)}\r\n        />\r\n        {$copyBtn}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Reformat;\r\n","import React, {useState} from 'react'\r\nimport styles from './Duplicates.module.css'\r\nimport {listToString, stringToList} from \"../../utils/list-string\";\r\nimport {delDuplicates} from \"../../utils/duplicates\";\r\nimport Textarea from \"../../components/inputs/Textarea\";\r\nimport CopyBtn from \"../../components/CopyBtn/CopyBtn\";\r\n\r\nexport default function Duplicates() {\r\n  const [inputData, setInputData] = useState([])\r\n  const [touched, setTouched] = useState(false)\r\n  const [deleted, setDeleted] = useState(0)\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault()\r\n    const result = delDuplicates(inputData)\r\n\r\n    setTouched(true)\r\n    setDeleted(result.difference)\r\n    setInputData(result.list)\r\n  }\r\n\r\n  function inputDataHandler(e) {\r\n    setInputData(stringToList(e.target.value))\r\n  }\r\n\r\n  const $deletedStat = touched ? (<span className={styles.stat}>удалено дубликатов: {deleted}</span>) : null\r\n  const $copyBtn = touched ? (<CopyBtn className={styles.copyBtn} payload={inputData}/>) : null\r\n\r\n  return (\r\n    <form\r\n      className={styles.form}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <div className={styles.textareaSpanBox}>\r\n        <Textarea\r\n          label='список'\r\n          className={styles.textarea}\r\n          value={listToString(inputData)}\r\n          onChange={inputDataHandler}\r\n          required\r\n        />\r\n        {$deletedStat}\r\n      </div>\r\n\r\n      <div>\r\n        <button className='button'>удалить дубликаты</button>\r\n        {$copyBtn}\r\n      </div>\r\n    </form>\r\n  )\r\n}","export function delDuplicates(list) {\r\n  const before = list.length\r\n  let set = new Set(list)\r\n  const result = Array.from(set)\r\n  const after = result.length\r\n\r\n  return {\r\n    list: result,\r\n    difference: before - after\r\n  }\r\n}","import React, {Fragment} from 'react'\r\nimport styles from './inputs.module.css'\r\n\r\nexport default function Radio({name, checked, onChange, label}) {\r\n  return (\r\n    <Fragment>\r\n      <input\r\n        className={styles.radio}\r\n        type=\"radio\"\r\n        name={name}\r\n        id={name}\r\n        checked={checked}\r\n        onChange={onChange}\r\n      />\r\n      <label\r\n        className={styles.radioLabel}\r\n        htmlFor={name}\r\n      >{label}</label>\r\n    </Fragment>\r\n  )\r\n}","import React, {useState} from 'react'\r\nimport styles from './TwoLists.module.css'\r\nimport {getAMinusB, getIntersections, getWithoutIntersections} from \"../../utils/twoLists\";\r\nimport {listToString, stringToList} from \"../../utils/list-string\";\r\nimport Textarea from \"../../components/inputs/Textarea\";\r\nimport Radio from \"../../components/inputs/Radio\";\r\nimport CopyBtn from \"../../components/CopyBtn/CopyBtn\";\r\n\r\nexport default function TwoLists() {\r\n  const [mode, setMode] = useState('intersection')\r\n  const [listA, setListA] = useState([])\r\n  const [listB, setListB] = useState([])\r\n  const [listC, setListC] = useState([])\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault()\r\n    switch (mode) {\r\n      case \"intersection\":\r\n        setListC(getIntersections(listA, listB))\r\n        break\r\n      case \"aMinusB\":\r\n        setListC(getAMinusB(listA, listB))\r\n        break\r\n      case \"withoutIntersections\":\r\n        setListC(getWithoutIntersections(listA, listB))\r\n        break\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  function inputDataHandler(e) {\r\n    const {name, value} = e.target\r\n    switch (name) {\r\n      case 'listA':\r\n        setListA(stringToList(value))\r\n        break\r\n      case 'listB':\r\n        setListB(stringToList(value))\r\n        break\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  function modeHandler(e) {\r\n    setMode(e.target.name)\r\n  }\r\n\r\n  // создание элементов\r\n  const modes = [\r\n    {label: 'Пересечения списков', mode: 'intersection'},\r\n    {label: 'Вычесть из первого списка второй', mode: 'aMinusB'},\r\n    {label: 'Получить значения обоих списков без общих элементов', mode: 'withoutIntersections'},\r\n  ]\r\n  const $modeSelectors = modes.map((item) => {\r\n    return (\r\n      <Radio\r\n        key={item.mode}\r\n        label={item.label}\r\n        name={item.mode}\r\n        checked={mode === item.mode}\r\n        onChange={modeHandler}\r\n      />\r\n    )\r\n  })\r\n  const inputLists = [\r\n    {\r\n      name: 'listA',\r\n      state: listA\r\n    },\r\n    {\r\n      name: 'listB',\r\n      state: listB\r\n    },\r\n  ]\r\n  const $inputLists = inputLists.map((item, index) => {\r\n    return (\r\n      <Textarea\r\n        label={'список ' + (index + 1)}\r\n        className={styles.inputList}\r\n        required\r\n        key={item.name}\r\n        name={item.name}\r\n        value={listToString(item.state)}\r\n        onChange={inputDataHandler}\r\n      />\r\n    )\r\n  })\r\n  const $copyBtn = listC.length ? (<CopyBtn className={styles.copyBtn} payload={listC}/>) : null\r\n\r\n  return (\r\n    <form\r\n      className={styles.form}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <div className={styles.inputListsBox}>\r\n        {$inputLists}\r\n      </div>\r\n\r\n      <Textarea\r\n        label='результат'\r\n        className={styles.resultList}\r\n        readOnly\r\n        name='listС'\r\n        value={listToString(listC)}\r\n      />\r\n      {$copyBtn}\r\n\r\n      <div className={styles.modeSelectors}>\r\n        {$modeSelectors}\r\n      </div>\r\n\r\n      <button\r\n        className={'button ' + styles.btn}\r\n      >Выполнить\r\n      </button>\r\n    </form>\r\n  )\r\n}","export function getIntersections(a, b) {\r\n  return a.filter(num => b.includes(num));\r\n}\r\n\r\nexport function getAMinusB(a, b) {\r\n  return a.filter(i => !b.includes(i))\r\n}\r\n\r\nexport function getWithoutIntersections(a, b) {\r\n  return a.filter(i => !b.includes(i))\r\n          .concat(b.filter(i => !a.includes(i)))\r\n}","import React from 'react'\r\nimport Layout from \"../hoc/Layout/Layout\";\r\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Reformat from \"../pages/Reformat/Reformat\";\r\nimport Duplicates from \"../pages/Duplicates/Duplicates\";\r\nimport TwoLists from \"../pages/TwoLists/TwoLists\";\r\nimport './App.global.css'\r\n\r\nexport default function App() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Layout>\r\n          <Route path='/reformat' component={Reformat}/>\r\n          <Route path='/duplicates' component={Duplicates}/>\r\n          <Route path='/twolists' component={TwoLists}/>\r\n          <Redirect from='/' to='/reformat'/>\r\n        </Layout>\r\n      </Switch>\r\n    </HashRouter>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport App from \"./App/App\";\r\n\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__rlj-y\",\"menu_opened\":\"Menu_menu_opened__1PeK4\",\"dimmer\":\"Menu_dimmer__2dHUk\",\"link\":\"Menu_link__3UHb9\",\"link_current\":\"Menu_link_current__1nJd1\",\"ul\":\"Menu_ul__17LuM\",\"li\":\"Menu_li__3svrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Reformat_form__10E4L\",\"block\":\"Reformat_block__1v6R7\",\"templateInput\":\"Reformat_templateInput__1cdIL\",\"textarea\":\"Reformat_textarea__qNpUh\",\"btn\":\"Reformat_btn__1uCfn\"};"],"sourceRoot":""}